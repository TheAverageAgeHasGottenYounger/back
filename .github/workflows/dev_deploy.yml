name: blaybus dev CI/CD

on:
  pull_request:
    types: [closed]
  workflow_dispatch: #(2). 수동 실행도 가능하도록

jobs:
  build:
    runs-on: ubuntu-latest # (3). OS 환경
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4 # (4). 최신 버전으로 업데이트

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17' # (5). 자바 설치
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # (6). 권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # (7). build 시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: yyyy-MM-dd'T'HH-mm-ss
          utcOffset: "+09:00"

      - name: Show Beanstalk Version Label
        run: echo "Deploying version github-action-${{ steps.current-time.outputs.time }}"

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions_dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: back-dev
          environment_name: Back-dev-env
          version_label: github-action-${{ steps.current-time.outputs.time }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          use_existing_version_if_available: true # 기존 버전 사용 설정
          wait_for_environment_recovery: 500
          wait_for_deployment: true
