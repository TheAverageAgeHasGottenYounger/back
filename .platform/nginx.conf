user nginx;

error_log /var/log/nginx/error.log warn;

pid /var/run/nginx.pid;

worker_processes auto;
worker_rlimit_nofile 33282;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    include conf.d/*.conf;

    # WebSocket 및 HTTP 업그레이드 매핑
    map $http_upgrade $connection_upgrade {
        default "upgrade";
        ''      close;
    }

    # Gzip 설정 (성능 최적화)
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    # 보안 강화 (Nginx 버전 정보 숨김)
    server_tokens off;

    # Spring Boot 백엔드 설정
    upstream springboot {
        server 127.0.0.1:8080;
        keepalive 1024;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # 최대 요청 본문 크기 (파일 업로드 관련)
        client_max_body_size 50M;

        location / {
            proxy_pass http://springboot;
            proxy_http_version 1.1;

            proxy_connect_timeout       240;
            proxy_send_timeout          240;
            proxy_read_timeout          240;
            send_timeout                240;

            proxy_buffers 16 16k;
            proxy_buffer_size 32k;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';

        }

        client_header_timeout 60;
        client_body_timeout   60;
        keepalive_timeout     60;

        # Spring Boot Health Check (예: http://localhost/health)
        location /health {
            proxy_pass http://springboot/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
